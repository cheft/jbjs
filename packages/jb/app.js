// Generated by CoffeeScript 1.7.1
var App, HttpHandler, Rest, StaticFileHandler, Thread, createWebServer;

Thread = java.lang.Thread;

createWebServer = Packages.org.webbitserver.WebServers.createWebServer;

StaticFileHandler = Packages.org.webbitserver.handler.StaticFileHandler;

HttpHandler = Packages.org.webbitserver.HttpHandler;

Rest = Packages.org.webbitserver.rest.Rest;

App = function() {
  return {
    init: function(port) {
      this.webServer = createWebServer(port || 9000);
      this.rest = new Rest(this.webServer);
      this.webServer.add(new StaticFileHandler('./public'));
      return this;
    },
    start: function() {
      this.webServer.start();
      return print('Server running at ' + this.webServer.getUri());
    },
    stop: function() {
      if (this.webServer) {
        return this.webServer.stop();
      }
    },
    params: function(req) {
      return {
        path: function(key) {
          return Rest.params(req).get(key);
        },
        query: function(key) {
          return req.queryParam(key);
        },
        form: function(key) {
          return req.postParam(key);
        }
      };
    },
    _url: '/jb',
    _restMethods: {
      get: 'GET',
      post: 'POST',
      put: 'PUT',
      del: 'DELETE',
      head: 'HEAD'
    },
    __noSuchMethod__: function(name, url, fn) {
      if (url === '/') {
        url = '';
      }
      return this.rest[this._restMethods[name]](this._url + url, new HttpHandler({
        handleHttpRequest: fn
      }));
    }
  };
};
