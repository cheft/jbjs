// Generated by CoffeeScript 1.7.1
var File, HashMap, Iterator, Map, Objects, Set, Thread, afterMap, beforeMap, run, scanFile, start, watchFile;

File = Packages.java.io.File;

HashMap = Packages.java.util.HashMap;

Iterator = Packages.java.util.Iterator;

Map = Packages.java.util.Map;

Objects = Packages.java.util.Objects;

Set = Packages.java.util.Set;

Thread = java.lang.Thread;

beforeMap = new HashMap();

afterMap = new HashMap();

scanFile = function(f) {
  var file, files, index, _results;
  files = f.listFiles();
  _results = [];
  for (index in files) {
    file = files[index];
    if (file.isFile()) {
      _results.push(afterMap.put(file.getAbsolutePath(), file.lastModified()));
    } else {
      _results.push(scanFile(file));
    }
  }
  return _results;
};

watchFile = function() {
  var afterSet, it, key;
  afterSet = afterMap.keySet();
  it = afterSet.iterator();
  while (it.hasNext()) {
    key = String(it.next());
    if (!Objects.equals(afterMap.get(key), beforeMap.get(key))) {
      print(key + " modified!");
      return true;
    }
  }
  return false;
};

start = function() {
  if (typeof app !== "undefined" && app !== null) {
    app.stop();
    delete app;
  }
  load('app.js');
  app.start();
  return print('app started');
};

run = function() {
  var afterCount, beforeCount, f, _results;
  f = new File(".");
  scanFile(f);
  beforeMap.putAll(afterMap);
  _results = [];
  while (true) {
    afterCount = afterMap.keySet().size();
    if (afterCount !== beforeCount) {
      beforeCount = afterCount;
      beforeMap.clear();
      beforeMap.putAll(afterMap);
      start();
    } else if (watchFile()) {
      beforeMap.clear();
      beforeMap.putAll(afterMap);
      start();
    }
    Thread.sleep(500);
    afterMap.clear();
    _results.push(scanFile(f));
  }
  return _results;
};

new Thread(run).start();

Thread.currentThread().join();
